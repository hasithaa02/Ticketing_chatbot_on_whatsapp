const { sendVisitorSelection } = require('./no_of_visitor');
const { handleCustomerSupport } = require('./c_s');

const sendHindiResponse = async (client, to) => {
  try {
    console.log('sendHindiResponse called with:', { to });

    const sections = [
      {
        title: 'рд╡рд┐рдХрд▓реНрдк',
        rows: [
          { rowId: 'book_ticket', title: 'рдЯрд┐рдХрдЯ рдмреБрдХ рдХрд░реЗрдВ', description: 'ЁЯОл рдЕрдкрдиреА рдЕрдЧрд▓реА рдпрд╛рддреНрд░рд╛ рдХреЗ рд▓рд┐рдП рдЯрд┐рдХрдЯ рд╕реБрд░рдХреНрд╖рд┐рдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рддреИрдпрд╛рд░ рд╣реИрдВ? ЁЯЧУя╕П' },
          { rowId: 'exhibitions_events', title: 'рдкреНрд░рджрд░реНрд╢рдирд┐рдпрд╛рдБ рдФрд░ рдХрд╛рд░реНрдпрдХреНрд░рдо', description: 'ЁЯОи рд╣рдорд╛рд░реЗ рд░реЛрдорд╛рдВрдЪрдХ рдкреНрд░рджрд░реНрд╢рдирд┐рдпреЛрдВ рдФрд░ рд╡рд┐рд╢реЗрд╖ рдХрд╛рд░реНрдпрдХреНрд░рдореЛрдВ рдХреЗ рд╕рд╛рде рдмрдиреЗ рд░рд╣реЗрдВред рдЬрд╛рдиреЗрдВ рдХрд┐ рдЖрдкрдХреЗ рдкрд╛рд╕ рдХреНрдпрд╛ рд╣реЛ рд░рд╣рд╛ рд╣реИ! ЁЯУЕ' },
          { rowId: 'customer_support', title: 'рдЧреНрд░рд╛рд╣рдХ рд╕рд╣рд╛рдпрддрд╛', description: 'ЁЯдЭ рдкреНрд░рд╢реНрди рд╣реИрдВ рдпрд╛ рдорджрдж рдЪрд╛рд╣рд┐рдП? рд╣рдо рдЖрдкрдХреА рд╕рд╣рд╛рдпрддрд╛ рдХреЗ рд▓рд┐рдП рдПрдХ рд╕рдВрджреЗрд╢ рджреВрд░ рд╣реИрдВ! ЁЯТм' }
        ]
      }
    ];

    const listMessage = {
      buttonText: 'рдПрдХ рд╡рд┐рдХрд▓реНрдк рдЪреБрдиреЗрдВ',
      description: `ЁЯОЯя╕ПтЬи рд╕рдВрдЧреНрд░рд╣рд╛рд▓рдп рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ! тЬиЁЯОЯя╕П
рдЖрдкрдХреА рдпрд╛рддреНрд░рд╛ рдпрд╣рд╛рдБ рд╕реЗ рд╢реБрд░реВ рд╣реЛрддреА рд╣реИ! ЁЯМЯ
рднрд╛рд╖рд╛ рдЪреБрдирдиреЗ рдХреЗ рд▓рд┐рдП рдзрдиреНрдпрд╡рд╛рджред рдЖрдЗрдП рдЖрдкрдХреЗ рдЕрдиреБрднрд╡ рдХреЛ рдпрд╛рджрдЧрд╛рд░ рдмрдирд╛рддреЗ рд╣реИрдВ! ЁЯОЙ

ЁЯСЗ рдХреГрдкрдпрд╛ рдиреАрдЪреЗ рджрд┐рдП рдЧрдП рд╡рд┐рдХрд▓реНрдкреЛрдВ рдореЗрдВ рд╕реЗ рдЪреБрдиреЗрдВ:`,
      sections: sections,
      listType: 1
    };

    await client.sendListMessage(to, listMessage);
  } catch (error) {
    console.error('Error in sendHindiResponse:', error);
  }
};

const handleHindiOption = async (client, to, selectedOption) => {
  try {
    console.log('handleHindiOption called with:', { to, selectedOption });
    switch (selectedOption) {
      case 'book_ticket':
        await sendVisitorSelection(client, to);
        break;
      case 'exhibitions_events':
        await client.sendText(to, 'ЁЯОи рд╣рдорд╛рд░реЗ рд░реЛрдорд╛рдВрдЪрдХ рдкреНрд░рджрд░реНрд╢рдирд┐рдпреЛрдВ рдФрд░ рд╡рд┐рд╢реЗрд╖ рдХрд╛рд░реНрдпрдХреНрд░рдореЛрдВ рдХреЗ рд╕рд╛рде рдмрдиреЗ рд░рд╣реЗрдВред рдЬрд╛рдиреЗрдВ рдХрд┐ рдЖрдкрдХреЗ рдкрд╛рд╕ рдХреНрдпрд╛ рд╣реЛ рд░рд╣рд╛ рд╣реИ! ЁЯУЕ');
        break;
      case 'customer_support':
        await client.sendText(to, 'ЁЯдЭ рдкреНрд░рд╢реНрди рд╣реИрдВ рдпрд╛ рдорджрдж рдЪрд╛рд╣рд┐рдП? рд╣рдо рдЖрдкрдХреА рд╕рд╣рд╛рдпрддрд╛ рдХреЗ рд▓рд┐рдП рдПрдХ рд╕рдВрджреЗрд╢ рджреВрд░ рд╣реИрдВ! ЁЯТм');
        break;
      default:
        await client.sendText(to, 'рдЕрдорд╛рдиреНрдп рд╡рд┐рдХрд▓реНрдкред рдХреГрдкрдпрд╛ рд╕реВрдЪреА рд╕реЗ рдЪреБрдиреЗрдВред');
    }
  } catch (error) {
    console.error('Error in handleHindiOption:', error);
  }
};

module.exports = { sendHindiResponse, handleHindiOption };